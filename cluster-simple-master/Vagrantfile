$turn_on_node_master = <<-SCRIPT
OUTPUT_FILE=/vagrant/join.sh
rm -rf /vagrant/join.sh
sudo kubeadm init --apiserver-advertise-address=192.168.1.120
mkdir -p $HOME/.kube  
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
sudo kubeadm token create --print-join-command > $OUTPUT_FILE
chmod +x $OUTPUT_FILE
#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml  
SCRIPT

$common_installation = <<-SCRIPT
sudo swapoff -a
sudo sed -i '/swap/d' /etc/fstab
sudo apt-get update
sudo apt-get install -y apt-transport-https docker.io curl
sudo systemctl start docker
sudo systemctl enable docker
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo touch /etc/apt/sources.list.d/kubernetes.list
echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubeadm kubectl kubelet
SCRIPT

Vagrant.configure("2") do |config|
    config.vm.define "master" do |master|
        master.vm.hostname = "master"
        master.vm.box = "ubuntu/bionic64"
        master.vm.box_check_update = false
        master.vm.network "public_network", bridge: "Realtek PCIe GbE Family Controller", ip: "192.168.1.120"
        master.vm.provision "shell", privileged: true, inline: $common_installation + $turn_on_node_master + "echo \"VM master IS UP \" "
        master.vm.provider "virtualbox" do |vb|
            vb.name = "master"
            vb.memory = 2048
            vb.cpus = 2
        end
    end
    villains = ["Thanos", "Galactus"]
    villains.each_with_index do |villain, i|
        machine_name = "workerNode#{villain}"
        config.vm.define machine_name do |node|
            node.vm.hostname = machine_name
            node.vm.box = "ubuntu/bionic64"
            node.vm.box_check_update = false
            node.vm.network "public_network", bridge: "Realtek PCIe GbE Family Controller", ip: "192.168.1.12#{i + 1}"
            node.vm.provision "shell", privileged: true, inline: $common_installation + "echo \"VM #{machine_name} IS UP \" "
            node.vm.provider "virtualbox" do |vb|
                vb.name = machine_name
                vb.memory = 2048
                vb.cpus = 2
            end
        end
    end    
end
